<?php

/**
 * @file
 * 
 * Main module file for Encrypt Form API module.
 */

/**
 * Implementation of hook_form_alter().
 */
function encryptfapi_form_alter(&$form, &$form_state, $form_id) {
  $encrypted_elements = array();
  $encrypted_elements = _encryptfapi_process_elements($form, $encrypted_elements);
  if (!empty($encrypted_elements)) {
    $form['#encrypted_elements'] = $encrypted_elements;
    array_unshift($form['#submit'], '_encryptfapi_form_submit');
  }
  krumo($form);
}

/**
 * Helper function to traverse array and find all elements with #encrypt
 * 
 * @param $form
 *  The form tree to parse.
 *
 * @param $encrypted_elements
 *  An array that stores the keys of items marked as #encrypt. Simply used for recursion.
 *
 * @return array
 *  An array of form elements that are marked as encrypted.
 */
function _encryptfapi_process_elements($form, &$encrypted_elements = array()) {
  $accepted_types = array('textfield', 'textarea', 'checkboxes', 'checkbox', 'radios', 'radio', 'password');
  foreach (element_children($form) as $element) {
    if (isset($form[$element]['#type']) && in_array($form[$element]['#type'], $accepted_types) && isset($form[$element]['#encrypt'])) {
      $encrypted_elements[] = $element;
    } elseif (is_array($form[$element])) {
      _encryptfapi_process_elements($form[$element], $encrypted_elements);
    }
  }
  return $encrypted_elements;
}

/**
 * Submit handler for the form.
 *
 * This is where we replace values with the encrypted counterparts.
 */
function _encryptfapi_form_submit($form, &$form_state) {
  foreach ($form['#encrypted_elements'] as $element) {
    $tree = _encryptfapi_get_array_key_path($form, $element);
    $value = drupal_array_get_nested_value($form_state['values'], $tree, $key_exists);
    form_set_value(array('#parents' => $tree), encrypt($value), $form_state);
  }
}

/**
 * Helper function to find the path to an array key.
 * TODO: There has to be a better way to do this.
 */
function _encryptfapi_get_array_key_path($array, $lookup) {
  if (array_key_exists($lookup, $array)) {
    return array($lookup);
  } else {
    foreach ($array as $key => $subarray) {
      if (is_array($subarray)) {
        $ret = _encryptfapi_get_array_key_path($subarray, $lookup);
        if ($ret) {
          $ret[] = $key;
          return array_reverse($ret);
        }
      }
    }
  }
  return null;
}
